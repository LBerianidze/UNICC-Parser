<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHh4eKx4eHpAeHh7YHh4e+h4eHvQeHh7UHh4ekB4eHiwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAeHh4GHh4elB4eHv0eHh7/Hh4e/x4eHv8eHh7/Hh4e/x4eHv8eHh79Hh4emB4e
        HgkAAAAAAAAAAAAAAAAeHh4GHh4eux4eHv8jIyP/gICA/9HR0f/19fX/9fX1/9HR0f+AgID/IyMj/x4e
        Hv8eHh69Hh4eBgAAAAAAAAAAHh4elR4eHv82Njb/1dXV/7y8vP9XV1f/KCgo/ygoKP9XV1f/u7u7/9bW
        1v82Njb/Hh4e/x4eHpUAAAAAHh4eLB4eHvwkJCT/1tbW/4uLi/8eHh7/Hh4e/x4eHv8eHh7/Hh4e/x4e
        Hv+Li4v/1tbW/yQkJP8eHh78Hh4eLB4eHo8eHh7/f39//7u7u/8eHh7/Hh4e/x4eHv8eHh7/Hh4e/x4e
        Hv8eHh7/Hh4e/7u7u/9/f3//Hh4e/x4eHpAeHh7XHh4e/87Ozv9XV1f/Hh4e/x8gIf9CsMf/Itj//yLY
        //8i2P//Hh4e/x4eHv9XV1f/zs7O/x4eHv8eHh7UHh4e+R4eHv/6+vr/KSkp/x4eHv8gIyP/I9j//yxD
        SP8eHh7/Hh4e/x4eHv8eHh7/KSkp//T09P8eHh7/Hh4e8x4eHvkeHh7/+vr6/ykpKf8eHh7/HyAh/yPY
        //8sQ0j/Hh4e/x4eHv8eHh7/Hh4e/ykpKf/5+fn/Hh4e/x4eHvkeHh7XHh4e/87Ozv9XV1f/Hh4e/x4e
        Hv9CtM3/Itj//yLY//8i2P//Hh4e/x4eHv9XV1f/zs7O/x4eHv8eHh7XHh4ejx4eHv9+fn7/vb29/x4e
        Hv8eHh7/Hh4e/x4eHv8eHh7/Hh4e/x4eHv8eHh7/u7u7/35+fv8eHh7/Hh4ejx4eHiseHh78IyMj/9XV
        1f+NjY3/Hh4e/x4eHv8eHh7/Hh4e/x4eHv8eHh7/i4uL/9bW1v8kJCT/Hh4e/B4eHisAAAAAHh4elR4e
        Hv82Njb/1dXV/7y8vP9XV1f/KSkp/ykpKf9XV1f/vLy8/9XV1f82Njb/Hh4e/x4eHpQAAAAAAAAAAB4e
        HgYeHh67Hh4e/yMjI/9/f3//zs7O//T09P/09PT/zs7O/39/f/8jIyP/Hh4e/x4eHr0eHh4GAAAAAAAA
        AAAAAAAAHh4eBh4eHpQeHh79Hh4e/x4eHv8eHh7/Hh4e/x4eHv8eHh7/Hh4e/R4eHpgeHh4JAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAHh4eKh4eHo4eHh7XHh4e+B4eHvgeHh7WHh4ejh4eHioAAAAAAAAAAAAA
        AAAAAAAA+B8AAOAHAADAAwAAgAEAAIABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAQAAgAEAAMAD
        AADgBwAA+B8AAA==
</value>
  </data>
</root>